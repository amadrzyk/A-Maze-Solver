/** * This class creates a priority node, which is essentially the same thing as a  * linearNode, but with a priority attribute and a few extra methods.
 *
 * @author alexmadrzyk
 * @version 1.0.0
 */public class PriorityNode<E>{	private PriorityNode<E> next;    private E element;    private double priority;        /**     * Creates a new node with just an element.     */    public PriorityNode(E elem)    {        next = null;        element = elem;    }        /**     * Creates a node storing the specified element.     *     * @param elem  the element to be stored within the new node     */    public PriorityNode (E elem, double p)    {        next = null;        element = elem;        priority = p;    }        /**     * Returns the node that follows this one.     *     * @return  the node that follows the current one     */    public PriorityNode<E> getNext()    {        return next;    }        /**     * Sets the node that follows this one.     *     * @param node  the node to be set to follow the current one     */    public void setNext (PriorityNode<E> node)    {        next = node;    }        /**     * Returns the element stored in this node.     *     * @return  the element stored in this node     */    public E getElement()    {        return element;    }        /**     * Sets the element stored in this node.     *     * @param elem  the element to be stored in this node     */    public void setElement (E elem)    {        element = elem;    }        /**     * Returns the priority stored in this node.     *     * @return  the priority stored in this node     */    public double getPriority()    {        return priority;    }        /**     * Sets the priority stored in this node.     *     * @param d  the priority to be stored in this node     */    public void setPriority (double d)    {        priority = d;    }        /**     * Returns the string version of this node     *      * @return  the string version of this node     */    public String toString()    {    	String outString = "" + element.toString() + " (Priority:" + priority + ")";    	return outString;    }}
